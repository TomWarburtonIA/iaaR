% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/noise_detection.R
\name{detect_noise}
\alias{detect_noise}
\title{Detect Noise Regions and Subtle Peaks in Chromatographic Data}
\usage{
detect_noise(
  df,
  rt_col_name = NULL,
  intensity_col_name = NULL,
  smoothing_window = 5,
  noise_threshold = 2,
  min_noise_duration = 3
)
}
\arguments{
\item{df}{A data frame containing chromatographic data with retention time
and intensity columns. The function will attempt to identify the columns
automatically based on typical names if not specified by the user.}

\item{rt_col_name}{Optional. A string specifying the column name for retention time.
If not provided, the function will attempt to detect it automatically.}

\item{intensity_col_name}{Optional. A string specifying the column name for intensity.
If not provided, the function will attempt to detect it automatically.}

\item{smoothing_window}{An integer specifying the window size for smoothing
the intensity data. Default is 5. Reducing this size increases sensitivity.}

\item{noise_threshold}{A numeric value specifying the threshold below which
the smoothed intensity is considered noise. Default is 2. Lowering this value
makes the function more sensitive.}

\item{min_noise_duration}{Minimum number of consecutive points to consider
as a noise region. Default is 3. Reducing this value helps in detecting shorter
noise bursts.}
}
\value{
A data frame with the same structure as the input \code{df}, but with
non-noise values in the intensity column replaced with \code{NA}.
}
\description{
This function identifies areas of noise and subtle peaks in chromatographic data
based on retention time and intensity. It can automatically detect relevant columns
based on common naming conventions or the user can specify their own column names
for retention time and intensity. Non-noise regions are replaced with \code{NA}.
}
\examples{
df <- data.frame(rt = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10),
                 signal = c(2, 3, 2, 2, 10, 50, 2, 2, 2, 2))
detect_noise(df, smoothing_window = 3, noise_threshold = 1, min_noise_duration = 2)
}
